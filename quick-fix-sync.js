// ===== SCRIPT FIX NHANH WORDPRESS SYNC =====
// Copy to√†n b·ªô script n√†y v√†o Browser Console

console.log('üöÄ B·∫ÆT ƒê·∫¶U FIX WORDPRESS SYNC...\n');

// B∆∞·ªõc 1: B·∫≠t t·∫•t c·∫£ sync settings
console.log('1Ô∏è‚É£ B·∫≠t sync settings...');
localStorage.setItem('wpSyncEnabled', 'true');
localStorage.setItem('autoSyncEnabled', 'true');
localStorage.setItem('bidirectionalSyncEnabled', 'true');
console.log('   ‚úÖ ƒê√£ b·∫≠t sync settings');

// B∆∞·ªõc 2: C·∫•u h√¨nh WordPress settings
console.log('2Ô∏è‚É£ C·∫•u h√¨nh WordPress settings...');
const wpSettings = {
  apiUrl: 'http://vhdcom.local/wp-json/wp/v2',
  username: 'admin',
  password: 'admin', // C·∫¶N THAY B·∫∞NG APPLICATION PASSWORD
  enabled: true
};
localStorage.setItem('wordpressSettings', JSON.stringify(wpSettings));
console.log('   ‚úÖ ƒê√£ c·∫•u h√¨nh WordPress settings');

// B∆∞·ªõc 3: Ki·ªÉm tra settings
console.log('3Ô∏è‚É£ Ki·ªÉm tra settings hi·ªán t·∫°i...');
console.log('   - wpSyncEnabled:', localStorage.getItem('wpSyncEnabled'));
console.log('   - autoSyncEnabled:', localStorage.getItem('autoSyncEnabled'));
console.log('   - bidirectionalSyncEnabled:', localStorage.getItem('bidirectionalSyncEnabled'));

const savedSettings = JSON.parse(localStorage.getItem('wordpressSettings'));
console.log('   - WordPress URL:', savedSettings.apiUrl);
console.log('   - WordPress Username:', savedSettings.username);
console.log('   - WordPress Enabled:', savedSettings.enabled);

// B∆∞·ªõc 4: Test WordPress connection
console.log('4Ô∏è‚É£ Test k·∫øt n·ªëi WordPress...');
fetch('http://vhdcom.local/wp-json/wp/v2/posts?per_page=1')
  .then(response => {
    if (response.ok) {
      console.log('   ‚úÖ WordPress ƒë·ªçc: TH√ÄNH C√îNG');
      return response.json();
    } else {
      console.log('   ‚ùå WordPress ƒë·ªçc: TH·∫§T B·∫†I');
      throw new Error('HTTP ' + response.status);
    }
  })
  .then(posts => {
    console.log('   üìä WordPress c√≥', posts.length, 'b√†i vi·∫øt');
    
    // Test write v·ªõi password hi·ªán t·∫°i
    console.log('5Ô∏è‚É£ Test ghi WordPress...');
    return fetch('http://vhdcom.local/wp-json/wp/v2/posts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Basic ' + btoa('admin:admin')
      },
      body: JSON.stringify({
        title: 'Test Quick Fix - ' + new Date().toISOString(),
        content: 'ƒê√¢y l√† test t·ª´ quick fix script',
        status: 'draft'
      })
    });
  })
  .then(response => {
    console.log('   üìù K·∫øt qu·∫£ ghi:', response.status);
    
    if (response.status === 201) {
      console.log('   üéâ HO√ÄN H·∫¢O! WordPress ghi th√†nh c√¥ng!');
      console.log('   ‚úÖ SYNC ƒê√É HO·∫†T ƒê·ªòNG!');
      
      // Clean up test post
      return response.json().then(post => {
        fetch(`http://vhdcom.local/wp-json/wp/v2/posts/${post.id}`, {
          method: 'DELETE',
          headers: {
            'Authorization': 'Basic ' + btoa('admin:admin')
          }
        });
        console.log('   üóëÔ∏è ƒê√£ x√≥a b√†i test');
      });
      
    } else if (response.status === 401) {
      console.log('   ‚ùå L·ªñI X√ÅC TH·ª∞C - C·∫¶N APPLICATION PASSWORD!');
      console.log('\nüîë B∆Ø·ªöC TI·∫æP THEO:');
      console.log('1. V√†o: http://vhdcom.local/wp-admin/profile.php');
      console.log('2. T·∫°o Application Password t√™n "Frontend Sync"');
      console.log('3. Copy password v√† ch·∫°y l·ªánh n√†y:');
      console.log('\nconst wpSettings = {');
      console.log('  apiUrl: "http://vhdcom.local/wp-json/wp/v2",');
      console.log('  username: "admin",');
      console.log('  password: "YOUR_APPLICATION_PASSWORD_HERE",');
      console.log('  enabled: true');
      console.log('};');
      console.log('localStorage.setItem("wordpressSettings", JSON.stringify(wpSettings));');
      console.log('window.location.reload();');
      
    } else {
      console.log('   ‚ö†Ô∏è L·ªói kh√°c:', response.status);
    }
  })
  .catch(error => {
    console.log('   ‚ùå L·ªói k·∫øt n·ªëi:', error.message);
  });

// H∆∞·ªõng d·∫´n test
console.log('\nüìã SAU KHI FIX:');
console.log('1. T·∫°o Application Password (n·∫øu c·∫ßn)');
console.log('2. Reload trang: window.location.reload()');
console.log('3. V√†o: http://localhost:3001/admin/news/create');
console.log('4. T·∫°o tin t·ª©c m·ªõi');
console.log('5. Xem Console ƒë·ªÉ th·∫•y logs sync');
console.log('6. Ki·ªÉm tra WordPress Admin');

console.log('\nüîç DEBUG COMMANDS:');
console.log('- Ki·ªÉm tra settings: console.log(localStorage.getItem("wpSyncEnabled"))');
console.log('- Reset settings: localStorage.clear()');
console.log('- Test WordPress: fetch("http://vhdcom.local/wp-json/wp/v2/posts?per_page=1")');

console.log('\n‚úÖ SCRIPT HO√ÄN TH√ÄNH!'); 